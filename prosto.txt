 Надо, чтобы первый игрок, получив первые пять карт, расклал эти пять карт по рядам, и только потом ход переходит следующему игроку. 
 тот получает пять карт и раскладывает пять карт по рядам. ход переходит следующему игроку. 
 тот получает три карты и раскладывает две карты по рядам, а третью карту отправляет в бито. Причом битые карты отображаются в отдельном блокею
 Далее ход переходит следующему игроку, который получает три карты. Две карты ложит в ряд, а третья карта в бито. и так далее.
 Порядок ходов должен быть [5,3,3,3,3]. В конце игры проверить ряды на все выигрышные комбинации покера и написать в каком ряду что за комбинация.
 Это следующие комбинации (в порядке возрастания силы): Старшая карта, Пара (Two of a Kind), Две пары (Two Pairs), Сет (Three of a Kind), Стрит (Straight), Флеш (Flush), 
 Фулл хаус (Full House), Каре (Four of a Kind), Стрит флеш (Straight Flush), Роял флеш (Royal Flush)


function showError(message) {
      errorMessageEl.textContent = message;
      setTimeout(() => errorMessageEl.textContent = '', 3000);
    }

    function showOrderError(errors) {
      // Clear previous errors
      document.querySelectorAll('.combo-bad').forEach(el => el.classList.remove('combo-bad'));
      
      errors.forEach(error => {
        const rowEl = playerBoardEl.querySelector(`[data-row="${error.row}"]`);
        const comboEl = rowEl.querySelector('.combo-indicator') || document.createElement('div');
        comboEl.className = 'combo-indicator combo-bad';
        comboEl.textContent = error.message;
        rowEl.appendChild(comboEl);
      });
    }

    // Event listeners
    joinBtn.addEventListener('click', () => {
      const name = playerNameInput.value.trim() || `Player${Math.floor(Math.random() * 1000)}`;
      if (!ws || ws.readyState !== WebSocket.OPEN) {
        connectWebSocket();
      }
      
      ws.send(JSON.stringify({
        action: 'join',
        name
      }));
    });

    readyBtn.addEventListener('click', () => {
      ws.send(JSON.stringify({
        action: 'ready'
      }));
      readyBtn.disabled = true;
    });

    // Initialize
    connectWebSocket();
  </script>
</body>
</html>
